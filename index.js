const { GraphQLServer } = require('graphql-yoga')

const mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/test', { useNewUrlParser: true, useUnifiedTopology: true});

//schema model
const Todo = mongoose.model('Kitten', {
    text: String,
    complete: Boolean
});


// schema
// name: String (arg called name of type String), String! means compulsory
// at 13min mark.
// after ":" is the return type
//ID is auto generated by graphQL
const typeDefs = `
  type Query {
    hello(name: String): String! 
  }
  type Todo {
      id: ID!
      text: String!
      complete: Boolean!
  }
  type Mutation {
      createTodo(text: String!): Todo
  }
`


const resolvers = {
  Query: {
    // if no name given, say "hello world"
    hello: (_, { name }) => `Hello ${name || 'World'}`,
  },
  Mutation: { 
      createTodo: async (_,{ text }) => {
          const todo = new Todo({text, complete: false});
          //saves in data base as it is a promise
          await todo.save();
          return todo;
      }
  }
};

const server = new GraphQLServer({ typeDefs, resolvers })

const db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function() {
  // we're connected!
  server.start(() => console.log('Server is running on localhost:4000'))
});

